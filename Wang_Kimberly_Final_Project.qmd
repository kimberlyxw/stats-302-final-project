---
title: "ENTER TITLE !!!!"
subtitle: "STAT 302 Final Project"
author: "Kimberly Wang"
format: 
  revealjs:
    transition: slide
    embed-resources: true
    slide-number: true
    show-slide-number: all
execute:
  message: false
  warning: false
editor_options: 
  chunk_output_type: console
editor: visual
---

## Introduction {.scrollable}



My GitHub Repo can be accessed through this link: [https://github.com/kimberlyxw/stats-302-final-project.git](https://github.com/kimberlyxw/stats-302-final-project.git). 


## Data {.scrollable}

::: {.panel-tabset}

### Data Information

This dataset was collected from an unnamed airline company, and it focuses on customer satisfaction levels. This dataset can be analyzed and used to determine how various aspects of a customer and their trip can affect their overall satisfaction levels with the airline. 

The data itself has no missingness except in the arrival delay in minutes variable. After some initial analysis, it does not seem like there is a consistent pattern in this missingness. The missingness is also relatively low, so this may be due to data collection or entry issues. Perhaps data on departure is more readily available because it might be more important for certain operations, but arrival data on the other hand is not as relevant. However, it could also be due to human error, since it is such a minor amount of missingness. In my data cleaning process, I simply removed this missingness. 

There are 129,880 observations. There are 22 columns, and out of these variables 4 are character variables and 18 are technically numeric. However, 14 of these variables are satisfaction ratings ranging from 0 to 5. 

This dataset was found on Kaggle.^[Ramin Huseyn (2024). Airline Customer Satisfaction. Location: Kaggle [https://www.kaggle.com/datasets/raminhuseyn/airline-customer-satisfaction](https://www.kaggle.com/datasets/raminhuseyn/airline-customer-satisfaction)]

The dataset was provided by Ramin Huseyn, and it was last updated on May 6th, 2024. 

### Why this Dataset? 

This dataset primarily focuses on customer satisfaction levels, unlike other datasets that may concentrate on operational metrics for an airline While, it is important to ensure that the airplanes are running properly and well by looking at that type of data, this type of dataset allows for more people-centric analysis, which is more interesting to me.  

:::

##  Service Satisifaction Ratings {.scrollable}

These first  graphs look at the distribution of satisfaction rating scores across various services. 

::: {.panel-tabset}

### Ridge Plot {.scrollable}

```{r}
#| echo: FALSE 
#| fig.width: 15
#| fig.height: 13
# Load necessary libraries
library(ggplot2)
library(ggridges)
library(dplyr)
library(tidyr)
library(patchwork)

# Read the dataset
airline <- read.csv("data/Airline_customer_satisfaction.csv") |> 
  janitor::clean_names()


####### FOR PLOT 1 (but multiple graphs) #######

# Select relevant columns for service satisfaction ratings
service_ratings <- airline |> select(
  seat_comfort,
  departure_arrival_time_convenient,
  food_and_drink,
  gate_location,
  inflight_wifi_service,
  inflight_entertainment,
  online_support,
  ease_of_online_booking,
  on_board_service,
  leg_room_service,
  baggage_handling,
  checkin_service,
  cleanliness,
  online_boarding
)

service_ratings_long <- service_ratings |> 
  pivot_longer(cols = everything(), names_to = "Service", values_to = "Rating")

service_labels <- c(
  seat_comfort = "Seat Comfort",
  departure_arrival_time_convenient = "Departure/Arrival Time Convenient",
  food_and_drink = "Food and Drink",
  gate_location = "Gate Location",
  inflight_wifi_service = "Inflight WiFi Service",
  inflight_entertainment = "Inflight Entertainment",
  online_support = "Online Support",
  ease_of_online_booking = "Ease of Online Booking",
  on_board_service = "On-Board Service",
  leg_room_service = "Leg Room Service",
  baggage_handling = "Baggage Handling",
  checkin_service = "Checkin Service",
  cleanliness = "Cleanliness",
  online_boarding = "Online Boarding"
)

ridge_plot <- ggplot(service_ratings_long, aes(x = Rating, y = Service, fill = Service)) +
  geom_density_ridges(alpha = 0.5) +
  scale_y_discrete(labels = service_labels) +
  scale_x_continuous(breaks = c(0, 1, 2, 3, 4, 5)) + 
  labs(
    title = "Ridge Plot of Different Service Features Satisfaction Ratings",
    subtitle = "While it differs from service to service, the most common rating is a 4",
    x = "Rating",
    y = "Service"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 20),  
    plot.subtitle = element_text(hjust = 0.5, size = 16), 
    axis.title.x = element_text(size = 15.5),                   
    axis.title.y = element_text(size = 15.5),                    
    axis.text.x = element_text(size = 13),                     
    axis.text.y = element_text(size = 13),                     
    legend.position = "none",
    strip.text = element_text(size = 17) 
  )

ridge_plot 
```

### Density Plots (Part 1) {.scrollable}

```{r}
#| echo: FALSE 
#| fig.width: 16
#| fig.height: 13

service_ratings <- airline |> select(
  seat_comfort,
  departure_arrival_time_convenient,
  food_and_drink,
  gate_location,
  inflight_wifi_service,
  inflight_entertainment,
  online_support,
  ease_of_online_booking,
  on_board_service,
  leg_room_service,
  baggage_handling,
  checkin_service,
  cleanliness,
  online_boarding
)

service_ratings_long <- service_ratings |> 
  pivot_longer(cols = everything(), names_to = "Service", values_to = "Rating")

service_labels <- c(
  "seat_comfort" = "Seat Comfort",
  "departure_arrival_time_convenient" = "Departure/Arrival Time Convenient",
  "food_and_drink" = "Food and Drink",
  "gate_location" = "Gate Location",
  "inflight_wifi_service" = "Inflight WiFi Service",
  "inflight_entertainment" = "Inflight Entertainment",
  "online_support" = "Online Support",
  "ease_of_online_booking" = "Ease of Online Booking",
  "on_board_service" = "On-Board Service",
  "leg_room_service" = "Leg Room Service",
  "baggage_handling" = "Baggage Handling",
  "checkin_service" = "Checkin Service",
  "cleanliness" = "Cleanliness",
  "online_boarding" = "Online Boarding"
)


first_half <- service_ratings_long |> 
  filter(Service %in% names(service_labels)[1:7])
second_half <- service_ratings_long |> 
  filter(Service %in% names(service_labels)[8:14])

facet_density_plot1 <- ggplot(first_half, aes(x = Rating, fill = Service)) +
  geom_density(alpha = 0.7) +
  labs(
    title = "Density Plots of Service Satisfaction Ratings (Part 1)",
    subtitle = "Distribution of Ratings for Different Service Features",
    x = "Rating",
    y = "Density",
    fill = "Service"
  ) +
  scale_y_continuous(limits = c(0, 1)) +  # Set y-axis limit to 1
  scale_fill_manual(values = scales::hue_pal()(length(service_labels)), labels = service_labels) +  # Change legend names and colors
  theme(
     plot.title = element_text(hjust = 0.5, size = 28),
    plot.subtitle = element_text(hjust = 0.5, size = 22),
    strip.text = element_text(size = 20),
    axis.text = element_text(size = 17),
    axis.title = element_text(size = 20),
    legend.title = element_text(size = 20),
    legend.text = element_text(size = 17),
    legend.position = "bottom",
    panel.grid.major = element_line(color = "grey90"),  # lighten the major grid lines
    panel.grid.minor = element_line(color = "grey90"),  
    panel.grid.major.x = element_blank(),  # remove major vertical grid lines
    panel.grid.minor.x = element_blank(),  
    panel.spacing = unit(1, "lines")
  ) +
  facet_wrap(~ Service, scales = "fixed", nrow = 4, labeller = labeller(Service = service_labels))

# Faceted density plots for the second half

num_services <- length(service_labels)
rainbow_colors <- rev(rainbow(num_services))

facet_density_plot2 <- ggplot(second_half, aes(x = Rating, fill = Service)) +
  geom_density(alpha = 0.7) +
  labs(
    title = "Density Plots of Service Satisfaction Ratings (Part 2)",
    subtitle = "Distribution of Ratings for Different Service Features",
    x = "Rating",
    y = "Density",
    fill = "Service"
  ) +
  scale_y_continuous(limits = c(0, 1)) +  # Set y-axis limit to 1
  scale_fill_manual(values = rainbow_colors, labels = service_labels) +  # Change legend names and colors
  theme(
    plot.title = element_text(hjust = 0.5, size = 28),
    plot.subtitle = element_text(hjust = 0.5, size = 22),
    strip.text = element_text(size = 20),
    axis.text = element_text(size = 17),
    axis.title = element_text(size = 20),
    legend.title = element_text(size = 20),
    legend.text = element_text(size = 17),
    legend.position = "bottom",
    panel.grid.major.x = element_blank(),  # Remove major vertical grid lines ???
    panel.grid.minor.x = element_blank(),  # Remove minor vertical grid lines ??
    panel.spacing = unit(1, "lines")
  ) +
  facet_wrap(~ Service, scales = "fixed", nrow = 4, labeller = labeller(Service = service_labels))

facet_density_plot1


```

### Density Plots (Part 2) {.scrollable}
```{r}
#| echo: FALSE 
#| fig.width: 16
#| fig.height: 13
facet_density_plot2
```

:::

## Ratings Based on Travel Class {.scrollable}

Next, these plots are looking at specific services and the differences in rating between the travel classes of Business, Economy, and Economy Plus. 


::: {.panel-tabset}

### Violin Plot {.scrollable}

```{r}
#| echo: FALSE 
#| fig.width: 16
#| fig.height: 13

service_ratings_plot2 <- airline |> select(
  class,
  seat_comfort,
  cleanliness,
  inflight_entertainment, 
  on_board_service
)

# Convert data to long format for ggplot2
service_ratings_plot2_long <- service_ratings_plot2 |>
  pivot_longer(cols = -class, names_to = "Service", values_to = "Rating")

# Create a named vector for better labels
service_labels_plot2 <- c(
  seat_comfort = "Seat Comfort",
  cleanliness = "Cleanliness",
  inflight_entertainment = "Inflight Entertainment", 
  class = " Travel Class", 
  on_board_service = "On Board Service"
)

# Update Service variable in service_ratings_plot2_long with better labels
service_ratings_plot2_long <- service_ratings_plot2_long |>
  mutate(Service = factor(Service, levels = names(service_labels_plot2), labels = service_labels_plot2))
# Define a custom color palette
custom_colors <- c("Business" = "lightblue", "Eco" = "lightgreen", "Eco Plus" = "plum1")

boxplot_plot <- ggplot(service_ratings_plot2_long, aes(x = class, y = Rating, fill = class)) +
  geom_boxplot() +
  labs(
    title = "Boxplots of Service Ratings by Travel Class",
    subtitle = "Comparing Ratings for Different Service Features",
    x = "Travel Class",
    y = "Rating",
    fill = "Travel Class"
  ) +
 theme(
    plot.title = element_text(hjust = 0.5, size = 30),
    plot.subtitle = element_text(hjust = 0.5, size= 24),
    strip.text = element_text(size = 19),
    axis.text = element_text(size = 15),
    axis.title = element_text(size = 19),
    legend.title = element_text(size = 15),
    legend.text = element_text(size = 19),
    legend.position = "bottom"
  )  +
  facet_wrap(~ Service, scales = "free_y") + 
  scale_fill_manual(values = custom_colors)

# Create violin plots for each service category by travel class
violin_plot <- ggplot(service_ratings_plot2_long, aes(x = class, y = Rating, fill = class)) +
  geom_violin() +
  labs(
    title = "Violin Plots of Service Ratings by Travel Class",
    subtitle = "Comparing Ratings for Different Service Features",
    x = "Travel Class",
    y = "Rating",
    fill = "Travel Class"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 30),
    plot.subtitle = element_text(hjust = 0.5, size= 24),
    strip.text = element_text(size = 19),
    axis.text = element_text(size = 15),
    axis.title = element_text(size = 19),
    legend.title = element_text(size = 15),
    legend.text = element_text(size = 19),
    legend.position = "bottom"
  ) +
  facet_wrap(~ Service, scales = "free_y") + 
  scale_fill_manual(values = custom_colors)

violin_plot
```


### Boxplot Plot {.scrollable}

```{r}
#| echo: FALSE 
#| fig.width: 16
#| fig.height: 13

boxplot_plot
```

:::

## General Satisfaction vs. Customer Demographics {.scrollable}

Finally, these plots work together to show consumer satisfaction across various customer demographics. 

::: {.panel-tabset}

### Barchart {.scrollable}
```{r}
#| echo: FALSE 
#| fig.width: 24
#| fig.height: 18

# Select relevant columns for customer satisfaction and demographics
satisfaction_data <- airline |> select(
  satisfaction,
  type_of_travel,
  class,
  customer_type
)

# Create a stacked bar chart for each demographic variable

# Type of Travel

satisfaction_data <- satisfaction_data |>
  mutate(type_of_travel = ifelse(type_of_travel == "Business travel", "Business Travel", type_of_travel))

type_of_travel_plot <- ggplot(satisfaction_data, aes(x = type_of_travel, fill = satisfaction)) +
  geom_bar(position = "fill") +
  theme_minimal() +
  labs(
    title = "By Type of Travel",
    x = "Type of Travel",
    y = "Proportion",
    fill = "Satisfaction"
  ) +
  scale_fill_discrete(labels = c("Unsatisfied", "Satisfied")) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 13),
    axis.text = element_text(size = 16),
    axis.title = element_text(size = 19),
    legend.position = "none"
  )

# Class
class_plot <- ggplot(satisfaction_data, aes(x = class, fill = satisfaction)) +
  geom_bar(position = "fill") +
  theme_minimal() +
  labs(
    title = "By Class",
    x = "Class",
    y = "Proportion",
    fill = "Satisfaction"
  ) +
  scale_fill_discrete(labels = c("Unsatisfied", "Satisfied")
                     ) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 13),
    axis.text = element_text(size = 16),
    axis.title = element_text(size = 19),
    legend.position = "none"
  )

# Customer Type
satisfaction_data <- satisfaction_data |>
  mutate(customer_type = ifelse(customer_type == "disloyal Customer", "Disloyal Customer", customer_type))

customer_type_plot <- ggplot(satisfaction_data, aes(x = customer_type, fill = satisfaction)) +
  geom_bar(position = "fill") +
  theme_minimal() +
  labs(
    title = "By Customer Type",
    x = "Customer Type",
    y = "Proportion",
    fill = "Satisfaction"
  ) +
  scale_fill_discrete(labels = c("Unsatisfied", "Satisfied")) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 13),
    axis.text = element_text(size = 16),
    axis.title = element_text(size = 19),
    legend.position = "none"
  )


satisfaction_count <- airline |>
  count(satisfaction)

# Create a bar plot for the total number of satisfied and unsatisfied customers
satisfaction_count_plot <- ggplot(satisfaction_count, aes(x = satisfaction, y = n, fill = satisfaction)) +
  geom_bar(stat = "identity", width = 0.7) +
  geom_text(aes(label = n), vjust = 1.5, color = "white", size = 5) +
  scale_fill_manual(values = c("dissatisfied" = "#d95f02", "satisfied" = "#1b9e77"), 
                    labels = c("Unsatisfied", "Satisfied")) +
scale_x_discrete(labels = c("dissatisfied" = "Unsatisfied", "satisfied" = "Satisfied")) +
  theme_minimal() +
  labs(
    title = "Total Number of Satisfied vs. Unsatisfied Customers",
    x = "Satisfaction",
    y = "Number of Customers",
    fill = "Satisfaction"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 13),
    axis.text = element_text(size = 16),
    axis.title = element_text(size = 19),
    legend.position = "none"
  )


# satisfaction grouped plot 

satisfaction_plot <- (type_of_travel_plot + class_plot) / (customer_type_plot + satisfaction_count_plot) + 
  plot_layout(guides = "collect") + 
  plot_annotation(title = "Analysis of Customer Satisfaction Across Different Dimensions", 
 theme = theme(
      plot.title = element_text(hjust = 0.5, size = 50)
    ))

satisfaction_plot <- satisfaction_plot & theme(
  legend.position = "bottom",
  legend.title = element_text(size = 24),
  legend.text = element_text(size = 20),
  plot.title = element_text(hjust = 0.5, size = 30)
)

satisfaction_plot

```


### Piecharts {.scrollable}
```{r}
#| echo: FALSE 
#| fig.width: 16
#| fig.height: 13
## same information as plot series 3 but in pie chart form 

# Type of Travel
satisfaction_data <- satisfaction_data |>
  mutate(type_of_travel = ifelse(type_of_travel == "Business travel", "Business Travel", type_of_travel))


type_of_travel_count <- satisfaction_data |>
  count(type_of_travel, satisfaction) |>
  group_by(type_of_travel) |>
  mutate(prop = n / sum(n), 
         label = scales::percent(prop, accuracy = 0.1))

# Create pie chart
type_of_travel_pie <- ggplot(type_of_travel_count, aes(x = "", y = prop, fill = satisfaction)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +
  facet_wrap(~ type_of_travel) +
  geom_text(aes(label = label), position = position_stack(vjust = 0.5), color = "white", size = 9) +
  theme_minimal() +
  labs(
    title = "By Type of Travel",
    x = NULL,
    y = NULL,
    fill = "Satisfaction"
  ) +
  scale_fill_discrete(labels = c("Unsatisfied", "Satisfied")) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 15),
    axis.text = element_blank(),
    axis.title = element_blank(),
    panel.grid = element_blank(),
    legend.title = element_text(size = 22),
    legend.text = element_text(size = 16), 
    strip.text = element_text(size = 18)
  )


# class
class_count <- satisfaction_data |>
  count(class, satisfaction) |>
  group_by(class) |>
  mutate(prop = n / sum(n), 
         label = scales::percent(prop, accuracy = 0.1))

# Create pie chart
class_pie <- ggplot(class_count, aes(x = "", y = prop, fill = satisfaction)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +
  facet_wrap(~ class) +
  geom_text(aes(label = label), position = position_stack(vjust = 0.5), color = "white", size = 9) +
  theme_minimal() +
  labs(
    title = "By Class",
    x = NULL,
    y = NULL,
    fill = "Satisfaction"
  ) +
  scale_fill_discrete(labels = c("Unsatisfied", "Satisfied")) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 8),
    axis.text = element_blank(),
    axis.title = element_blank(),
    panel.grid = element_blank(),
    legend.title = element_text(size = 10),
    legend.text = element_text(size = 8), 
    strip.text = element_text(size = 6.5)
  )



# Customer Type


satisfaction_data <- satisfaction_data |>
  mutate(customer_type = ifelse(customer_type == "disloyal Customer", "Disloyal Customer", customer_type))


customer_type_agg <- satisfaction_data |>
  count(customer_type, satisfaction) |>
  group_by(customer_type) |>
  mutate(prop = n / sum(n), 
         label = scales::percent(prop, accuracy = 0.1))

# Create pie chart
customer_type_pie <- ggplot(customer_type_agg, aes(x = "", y = prop, fill = satisfaction)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +
  facet_wrap(~ customer_type, nrow = 1) +
  geom_text(aes(label = label), position = position_stack(vjust = 0.5), color = "white", size = 9) +
  theme_minimal() +
  labs(
    title = "By Customer Type",
    x = NULL,
    y = NULL,
    fill = "Satisfaction") +
  scale_fill_discrete(labels = c("Unsatisfied", "Satisfied")) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 8),
    axis.text = element_blank(),
    axis.title = element_blank(),
    panel.grid = element_blank(),
    legend.title = element_text(size = 10),
    legend.text = element_text(size = 8), 
    strip.text = element_text(size = 6.5)
  )


piecharts <- (class_pie / (type_of_travel_pie  + customer_type_pie)) + 
  plot_layout(guides = "collect") + 
  plot_annotation(title = "Customer Satisfaction Analysis Across Various Dimensions with Percentage Values")

# Adjust the theme for the combined legend and title
piecharts <- piecharts & theme(
  legend.position = "bottom",
  legend.title = element_text(size = 20),
  legend.text = element_text(size = 16),
  plot.title = element_text(hjust = 0.5, size = 28), 
  strip.text = element_text(size = 18), 
  plot.margin = margin(t = 15, r = 5, b = 5, l = 5)
)
piecharts

```

:::


## Additional Information {.scrollable}

Provided within each panel is additional information about each series of graphics that were just presented. 

::: {.panel-tabset}

### Service Satisifaction Ratings {.scrollable}

The density plots and ridge plots show the distribution of ratings for each service feature. These visualizations provide a comprehensive overview of customer satisfaction ratings across various service features within the context of airline services. Across different service features, a satisfaction rating of 4 is consistently the most frequent rating. This indicates a general trend where most customers are quite satisfied with the services, although not to the highest possible degree (5).

By comparing the density peaks, one can identify which service features are generally rated higher and which ones have more room for improvement. Features like "Inflight Entertainment" and "Seat Comfort" often show higher peaks at higher ratings, indicating better performance. Services like "Baggage Handling" and "Checkin Service" might show more significant peaks at lower ratings, indicating areas where the service might not be meeting customer expectations.

:::
